/**
 * ============================
 * CHAT DE IA INTEGRADO COM TRANSFORMERS.JS
 * ============================
 * 
 * Este script implementa um chat interativo com IA que funciona 100% no navegador.
 * Utiliza Transformers.js para processamento local sem necessidade de backend.
 * 
 * Funcionalidades:
 * - Chat interativo com modelo de linguagem local
 * - Perguntas pr√©-definidas para intera√ß√£o r√°pida
 * - Sele√ß√£o de texto para an√°lise contextual
 * - Interface responsiva e acess√≠vel
 */

// ============================
// CONFIGURA√á√ïES DA IA
// ============================

const AI_CONFIG = {
  MODEL_ID: 'Xenova/gpt2', // Modelo mais robusto para melhor qualidade
  MAX_LENGTH: 150,         // Comprimento m√°ximo da resposta
  TEMPERATURE: 0.3,        // Menos criatividade para respostas mais focadas
  TOP_P: 0.8,             // Nucleus sampling mais conservador
  DO_SAMPLE: true,        // Ativa amostragem
  BATCH_SIZE: 1           // Tamanho do lote
};

// ============================
// VARI√ÅVEIS GLOBAIS
// ============================

let pipeline = null;
let isModelLoaded = false;
let isGenerating = false;
let selectedText = '';
let chatHistory = [];

// ============================
// CARREGAMENTO DO MODELO
// ============================

/**
 * Carrega o modelo de IA (modo simplificado)
 */
async function loadAIModel() {
  console.log('Inicializando assistente m√©dico...');
  
  // Mostra interface imediatamente
  showChatInterface();
  addWelcomeMessage();
  
  // Marca como carregado (usando respostas contextuais)
  isModelLoaded = true;
  console.log('Assistente m√©dico pronto! Usando respostas contextuais especializadas.');
}

/**
 * Mostra a interface do chat ap√≥s carregar o modelo
 */
function showChatInterface() {
  const loadingIndicator = document.getElementById('ai-loading-indicator');
  const chatContent = document.getElementById('ai-chat-content');
  
  if (loadingIndicator) {
    loadingIndicator.classList.add('hidden');
  }
  
  if (chatContent) {
    chatContent.classList.remove('hidden');
  }
}

/**
 * Adiciona mensagem de boas-vindas
 */
function addWelcomeMessage() {
  const welcomeMessage = `**üéì Assistente de Estudos M√©dicos**

**Como posso ajudar:**
‚Ä¢ üß∏ **Explica√ß√µes simples** - Conceitos f√°ceis de entender
‚Ä¢ üî¨ **An√°lises t√©cnicas** - Detalhes avan√ßados
‚Ä¢ üìã **Casos cl√≠nicos** - Pr√°tica para provas
‚Ä¢ üìö **Resumos** - Pontos importantes

**Como usar:**
‚Ä¢ **Selecione texto** na p√°gina ‚Üí aparecem bot√µes
‚Ä¢ **Use bot√µes r√°pidos** abaixo
‚Ä¢ **Digite perguntas** diretamente

**Especialidade:**
S√≠ndrome Ict√©rica, bilirrubina e metabolismo hep√°tico

*Pronto para estudar! Selecione um texto ou use os bot√µes abaixo.*`;
  
  addMessageToChat('ai', welcomeMessage);
}

/**
 * Mostra mensagem de erro
 */
function showErrorMessage(message) {
  const loadingIndicator = document.getElementById('ai-loading-indicator');
  if (loadingIndicator) {
    loadingIndicator.innerHTML = `
      <div style="color: #e74c3c; text-align: center;">
        <p>‚ùå ${message}</p>
        <button onclick="location.reload()" style="margin-top: 10px; padding: 8px 16px; background: #e74c3c; color: white; border: none; border-radius: 4px; cursor: pointer;">
          Recarregar
        </button>
      </div>
    `;
  }
}

// ============================
// GERA√á√ÉO DE RESPOSTAS
// ============================

/**
 * Gera resposta da IA baseada no prompt
 */
async function generateAIResponse(prompt, context = '') {
  if (isGenerating) {
    throw new Error('A IA j√° est√° processando uma resposta. Aguarde...');
  }
  
  isGenerating = true;
  
  try {
    console.log('Processando pergunta:', prompt);
    
    // Primeiro tenta uma resposta contextual inteligente
    let response = generateContextualResponse(prompt, context);
    
    // Se n√£o encontrou resposta contextual, usa o modelo de IA
    if (!response && isModelLoaded && pipeline) {
      response = await generateModelResponse(prompt, context);
    }
    
    // Se ainda n√£o tem resposta, usa fallback educativo
    if (!response) {
      response = generateFallbackResponse(prompt, context);
    }
    
    console.log('Resposta gerada:', response);
    return response;
    
  } catch (error) {
    console.error('Erro ao gerar resposta:', error);
    return generateFallbackResponse(prompt, context);
  } finally {
    isGenerating = false;
  }
}

/**
 * Gera resposta contextual baseada em padr√µes conhecidos
 */
function generateContextualResponse(prompt, context) {
  const promptLower = prompt.toLowerCase();
  const contextLower = context.toLowerCase();
  
  // Respostas para explica√ß√µes infantis
  if (promptLower.includes('crian√ßa') || promptLower.includes('8 anos')) {
    if (contextLower.includes('crigler-najjar')) {
      return `**üß∏ Explica√ß√£o Simples - S√≠ndrome de Crigler-Najjar**

**O que √©:**
‚Ä¢ √â como ter uma "f√°brica" no corpo (f√≠gado) com um trabalhador doente
‚Ä¢ Este trabalhador deveria limpar uma "tinta amarela" do sangue
‚Ä¢ Quando ele n√£o funciona, a pessoa fica amarelada

**Por que acontece:**
‚Ä¢ A crian√ßa j√° nasce assim (como ter olhos azuis)
‚Ä¢ √â muito raro - pouqu√≠ssimas pessoas t√™m
‚Ä¢ N√£o √© culpa de ningu√©m

**O que os m√©dicos fazem:**
‚Ä¢ Tratamentos com luz especial
‚Ä¢ Rem√©dios que ajudam
‚Ä¢ Cuidados especiais

**√â importante saber:**
‚Ä¢ Com tratamento, a crian√ßa pode viver bem
‚Ä¢ Os m√©dicos sabem como cuidar
‚Ä¢ A fam√≠lia sempre ajuda muito! üíõ`;
    }
    
    if (contextLower.includes('gilbert')) {
      return `**üß∏ Explica√ß√£o Simples - S√≠ndrome de Gilbert**

**O que √©:**
‚Ä¢ √â ter um "funcion√°rio pregui√ßoso" no f√≠gado
‚Ä¢ Ele deveria limpar uma tinta amarela do sangue
‚Ä¢ √Äs vezes trabalha devagar (como quando estamos cansados)

**Quando aparece:**
‚Ä¢ Quando a pessoa est√° cansada
‚Ä¢ Quando n√£o come por muito tempo
‚Ä¢ Quando est√° muito estressada
‚Ä¢ Deixa a pessoa um pouquinho amarelada

**√â perigoso?**
‚Ä¢ N√ÉO! √â completamente seguro
‚Ä¢ √â como ter sardas ou ser alto
‚Ä¢ Muitas pessoas t√™m (1 em cada 10!)
‚Ä¢ Na verdade, at√© protege de algumas doen√ßas

**O legal:**
‚Ä¢ √â uma caracter√≠stica especial
‚Ä¢ N√£o precisa de tratamento
‚Ä¢ A pessoa vive normalmente! üòä`;
    }
    
    if (contextLower.includes('icter√≠cia') || contextLower.includes('bilirrubina')) {
      return `**üß∏ Explica√ß√£o Simples - Icter√≠cia**

**O que √© icter√≠cia:**
‚Ä¢ √â quando a pele e os olhos ficam amarelados
‚Ä¢ Como se tivesse comido muita cenoura!
‚Ä¢ Vem de uma "tinta amarela" no sangue

**De onde vem a tinta amarela:**
‚Ä¢ Dos gl√≥bulos vermelhos velhinhos
‚Ä¢ √â como quebrar um l√°pis amarelo
‚Ä¢ O p√≥ amarelo fica espalhado

**Como o corpo limpa:**
‚Ä¢ O f√≠gado √© uma "f√°brica de limpeza"
‚Ä¢ Ele pega a tinta amarela
‚Ä¢ E joga fora nas fezes e urina

**Quando h√° problema:**
‚Ä¢ A f√°brica fica sobrecarregada
‚Ä¢ Ou tem algum "funcion√°rio" doente
‚Ä¢ A tinta amarela se acumula

**O que fazer:**
‚Ä¢ Ir ao m√©dico investigar
‚Ä¢ Descobrir por que aconteceu
‚Ä¢ Ajudar a f√°brica a funcionar melhor! üè≠üíõ`;
    }
  }
  
  // Respostas para n√≠vel doutorado
  if (promptLower.includes('doutorado') || promptLower.includes('t√©cnica') || promptLower.includes('detalhada')) {
    if (contextLower.includes('crigler-najjar')) {
      return `**üî¨ An√°lise T√©cnica - S√≠ndrome de Crigler-Najjar**

**1. Fisiopatologia Molecular:**
‚Ä¢ Muta√ß√µes no gene UGT1A1 (cromossoma 2q37)
‚Ä¢ Codifica UDP-glicuroniltransferase 1A1
‚Ä¢ Catalisa conjuga√ß√£o: bilirrubina + √°cido glicur√¥nico

**2. Classifica√ß√£o Molecular:**
‚Ä¢ **Tipo I:** Defici√™ncia completa UGT1A1
  - Muta√ß√µes nonsense/frameshift
  - Bilirrubina >20 mg/dL
  - Kernicterus inevit√°vel sem tratamento

‚Ä¢ **Tipo II:** Defici√™ncia parcial (<10% atividade)
  - Muta√ß√µes missense
  - Bilirrubina 6-20 mg/dL
  - Responsivo ao fenobarbital

**3. Abordagem Terap√™utica:**
‚Ä¢ **Fenobarbital:** Induz CYP2A6 e UGT1A1 residual
‚Ä¢ **Fototerapia:** Converte em fotois√¥meros sol√∫veis
‚Ä¢ **Transplante:** Restaura capacidade conjugativa

**4. Progn√≥stico:**
‚Ä¢ Cr√≠tico: Preven√ß√£o de encefalopatia bilirrub√≠nica
‚Ä¢ Janela terap√™utica limitada no desenvolvimento neurol√≥gico
‚Ä¢ Monitoramento cont√≠nuo essencial`;
    }
    
    if (contextLower.includes('gilbert')) {
      return `**üî¨ An√°lise T√©cnica - S√≠ndrome de Gilbert**

**1. Base Molecular:**
‚Ä¢ Redu√ß√£o 70-80% atividade UGT1A1
‚Ä¢ Polimorfismo TA repeat no promotor TATA
‚Ä¢ (TA)7 em vez de (TA)6 normal

**2. Fisiopatologia:**
‚Ä¢ Conjuga√ß√£o reduzida mas n√£o ausente
‚Ä¢ Compens√°vel em condi√ß√µes normais
‚Ä¢ Descompensa√ß√£o com estresse metab√≥lico

**3. Fatores Precipitantes:**
‚Ä¢ **Jejum:** Redu√ß√£o caloria/glicose
‚Ä¢ **Estresse:** Cortisol ‚Üë, gliconeog√™nese ‚Üë
‚Ä¢ **Exerc√≠cio:** Aumento demanda energ√©tica
‚Ä¢ **√Ålcool:** Inibi√ß√£o competitiva UGT1A1

**4. Implica√ß√µes Cl√≠nicas:**
‚Ä¢ Efeito protetor: Antioxidante end√≥geno
‚Ä¢ Redu√ß√£o risco cardiovascular
‚Ä¢ Menor incid√™ncia c√¢ncer c√≥lon
‚Ä¢ Diagn√≥stico diferencial essencial`;
    }
  }
  
  // Respostas para casos cl√≠nicos
  if (promptLower.includes('caso cl√≠nico') || promptLower.includes('diagn√≥stico diferencial')) {
    if (contextLower.includes('crigler-najjar') || contextLower.includes('gilbert')) {
      return `**üìã Caso Cl√≠nico - Icter√≠cia em Adulto Jovem**

**APRESENTA√á√ÉO:**
‚Ä¢ Homem, 25 anos
‚Ä¢ Icter√≠cia intermitente desde adolesc√™ncia
‚Ä¢ Piora com jejum e estresse
‚Ä¢ Nega dor, col√∫ria ou acolia

**EXAME F√çSICO:**
‚Ä¢ Icter√≠cia leve de escleras
‚Ä¢ Abdome: sem hepatoesplenomegalia
‚Ä¢ Demais sistemas normais

**LABORAT√ìRIO:**
‚Ä¢ Bilirrubina total: 3.2 mg/dL (VR <1.2)
‚Ä¢ Bilirrubina indireta: 2.8 mg/dL
‚Ä¢ Bilirrubina direta: 0.4 mg/dL
‚Ä¢ TGO/TGP: normais
‚Ä¢ Hemograma: normal

**DIAGN√ìSTICO DIFERENCIAL:**
1. **S√≠ndrome de Gilbert ‚≠ê (mais prov√°vel)**
2. Hem√≥lise subcl√≠nica
3. S√≠ndrome de Crigler-Najjar tipo II
4. Hepatopatia oculta

**PONTOS HIGH-YIELD:**
‚Ä¢ Jejum prolongado ‚Üí piora Gilbert
‚Ä¢ Reticul√≥citos normais ‚Üí exclui hem√≥lise
‚Ä¢ Fenobarbital melhora Gilbert e CN-II
‚Ä¢ Gilbert: 7-9% da popula√ß√£o
‚Ä¢ Padr√£o familiar comum

**DIAGN√ìSTICO:** S√≠ndrome de Gilbert
**CONDUTA:** Tranquiliza√ß√£o + orienta√ß√£o diet√©tica`;
    }
  }
  
  return null; // N√£o encontrou resposta contextual
}

/**
 * Gera resposta usando modelo de IA
 */
async function generateModelResponse(prompt, context) {
  try {
    const fullPrompt = preparePrompt(prompt, context);
    
    const result = await pipeline(fullPrompt, {
      max_length: AI_CONFIG.MAX_LENGTH,
      temperature: AI_CONFIG.TEMPERATURE,
      top_p: AI_CONFIG.TOP_P,
      do_sample: AI_CONFIG.DO_SAMPLE,
      num_return_sequences: 1,
      pad_token_id: pipeline.tokenizer.eos_token_id
    });
    
    let response = result[0].generated_text;
    response = response.replace(fullPrompt, '').trim();
    return postProcessResponse(response);
    
  } catch (error) {
    console.error('Erro no modelo de IA:', error);
    return null;
  }
}

/**
 * Gera resposta fallback educativa
 */
function generateFallbackResponse(prompt, context) {
  const promptLower = prompt.toLowerCase();
  
  if (promptLower.includes('crian√ßa') || promptLower.includes('simples')) {
    return `**üß∏ Explica√ß√£o Simples - Icter√≠cia**

**O que √©:**
‚Ä¢ Quando ficamos amarelados (pele e olhos)
‚Ä¢ Vem de uma "tinta amarela" no sangue
‚Ä¢ Como misturar tinta amarela na √°gua

**Por que acontece:**
‚Ä¢ Os gl√≥bulos vermelhos ficam velhinhos
‚Ä¢ Liberam essa tinta amarela
‚Ä¢ O f√≠gado (nossa "f√°brica de limpeza") remove ela

**Quando h√° problema:**
‚Ä¢ A f√°brica fica sobrecarregada
‚Ä¢ Ou tem algum "funcion√°rio" doente
‚Ä¢ A tinta se acumula

**√â s√©rio?**
Depende da causa, mas os m√©dicos sabem investigar e tratar!

*Quer que eu explique alguma parte espec√≠fica? üòä*`;
  }
  
  if (promptLower.includes('doutorado') || promptLower.includes('t√©cnic')) {
    return `**üî¨ An√°lise T√©cnica - S√≠ndrome Ict√©rica**

**1. Metabolismo da Bilirrubina:**
‚Ä¢ Forma√ß√£o: degrada√ß√£o heme ‚Üí biliverdina ‚Üí bilirrubina
‚Ä¢ Transporte: ligada √† albumina (insol√∫vel)
‚Ä¢ Conjuga√ß√£o: UGT1A1 no hepat√≥cito
‚Ä¢ Excre√ß√£o: bile ‚Üí intestino

**2. Classifica√ß√£o Fisiopatol√≥gica:**
‚Ä¢ **Pr√©-hep√°tica:** Hem√≥lise excessiva
‚Ä¢ **Hep√°tica:** Disfun√ß√£o hepatocelular/enzim√°tica  
‚Ä¢ **P√≥s-hep√°tica:** Obstru√ß√£o biliar

**3. Diagn√≥stico Diferencial:**
‚Ä¢ Propor√ß√£o BD/BI (direta/indireta)
‚Ä¢ Padr√£o enzim√°tico (TGO/TGP vs FA/GGT)
‚Ä¢ Sinais cl√≠nicos associados

**4. Pontos-Chave:**
‚Ä¢ BI ‚Üë ‚Üí hem√≥lise ou defeito conjuga√ß√£o
‚Ä¢ BD ‚Üë ‚Üí les√£o hepatocelular ou colestase

*Precisa de detalhes sobre algum aspecto espec√≠fico?*`;
  }
  
  if (promptLower.includes('caso cl√≠nico')) {
    return `**üìã Caso Cl√≠nico Modelo**

**CEN√ÅRIO:**
Icter√≠cia intermitente em adulto jovem

**INVESTIGA√á√ÉO ESSENCIAL:**
‚Ä¢ Hist√≥ria familiar de icter√≠cia
‚Ä¢ Fatores precipitantes (jejum, estresse, √°lcool)
‚Ä¢ Padr√£o das enzimas hep√°ticas
‚Ä¢ Presen√ßa/aus√™ncia de hepatomegalia

**PRINCIPAIS HIP√ìTESES:**
1. **S√≠ndrome de Gilbert** (mais comum)
2. Hem√≥lise subcl√≠nica
3. S√≠ndrome de Crigler-Najjar

**PONTOS HIGH-YIELD:**
‚Ä¢ Gilbert: 7-9% popula√ß√£o, piora com jejum
‚Ä¢ Crigler-Najjar: raro, pode causar kernicterus
‚Ä¢ Reticul√≥citos normais ‚Üí exclui hem√≥lise

*Quer que eu elabore algum aspecto espec√≠fico?*`;
  }
  
  return `**üí° Como posso ajudar com seus estudos?**

**Op√ß√µes dispon√≠veis:**
‚Ä¢ üß∏ **Explica√ß√µes simples** - Para entender melhor
‚Ä¢ üî¨ **An√°lises t√©cnicas** - Detalhes avan√ßados
‚Ä¢ üìã **Casos cl√≠nicos** - Pr√°tica para provas
‚Ä¢ üìö **Resumos** - Pontos importantes

**Pr√≥ximos passos:**
1. Use os bot√µes r√°pidos abaixo
2. Selecione texto na p√°gina
3. Digite uma pergunta espec√≠fica

*O que seria mais √∫til para seu estudo? üìö*`;
}

/**
 * Prepara o prompt com contexto m√©dico
 */
function preparePrompt(userPrompt, context = '') {
  const medicalContext = `
Como um assistente m√©dico educacional especializado em explicar conceitos de medicina de forma clara e precisa:

Contexto m√©dico atual: ${context || 'S√≠ndrome Ict√©rica - estudo sobre bilirrubina e icter√≠cia'}

Pergunta do estudante: ${userPrompt}

Resposta educativa:`;

  return medicalContext;
}

/**
 * P√≥s-processa a resposta para melhorar qualidade
 */
function postProcessResponse(response) {
  if (!response || response.length < 10) {
    return 'Desculpe, n√£o consegui gerar uma resposta adequada. Pode reformular sua pergunta?';
  }
  
  // Remove quebras de linha excessivas
  response = response.replace(/\n\s*\n\s*\n/g, '\n\n');
  
  // Remove caracteres especiais problem√°ticos
  response = response.replace(/[^\w\s\.,;:!?\-\(\)\[\]"'√°√©√≠√≥√∫√†√®√¨√≤√π√¢√™√Æ√¥√ª√£√µ√ß√Å√â√ç√ì√ö√Ä√à√å√í√ô√Ç√ä√é√î√õ√É√ï√á]/g, '');
  
  // Limita a resposta se muito longa
  if (response.length > 500) {
    response = response.substring(0, 500) + '...';
  }
  
  // Adiciona pontualiza√ß√£o se necess√°rio
  if (!response.match(/[.!?]$/)) {
    response += '.';
  }
  
  return response.trim();
}

// ============================
// INTERFACE DO CHAT
// ============================

/**
 * Adiciona mensagem ao chat
 */
function addMessageToChat(sender, message, isTyping = false) {
  const messagesContainer = document.getElementById('ai-chat-messages');
  if (!messagesContainer) return;
  
  const messageDiv = document.createElement('div');
  messageDiv.className = `chat-message ${sender}`;
  
  if (isTyping && sender === 'ai') {
    messageDiv.classList.add('typing');
    messageDiv.innerHTML = `
      <span>Analisando...</span>
      <div class="typing-indicator">
        <div class="typing-dot"></div>
        <div class="typing-dot"></div>
        <div class="typing-dot"></div>
      </div>
    `;
  } else {
    // Formatar mensagem com markdown simples
    messageDiv.innerHTML = formatMessage(message);
  }
  
  messagesContainer.appendChild(messageDiv);
  messagesContainer.scrollTop = messagesContainer.scrollHeight;
  
  return messageDiv;
}

/**
 * Formata mensagem com markdown simples
 */
function formatMessage(message) {
  if (!message) return '';
  
  let formatted = message
    // T√≠tulos
    .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
    // It√°lico
    .replace(/\*(.+?)\*/g, '<em>$1</em>')
    // Quebras de linha
    .replace(/\n/g, '<br>')
    // Lista com bullets
    .replace(/^[‚Ä¢\-\*] (.+)/gm, '‚Ä¢ $1')
    // Se√ß√µes numeradas
    .replace(/^(\d+\.) (.+)/gm, '<strong>$1</strong> $2');
  
  return formatted;
}

/**
 * Remove mensagem do chat
 */
function removeMessageFromChat(messageElement) {
  if (messageElement && messageElement.parentNode) {
    messageElement.parentNode.removeChild(messageElement);
  }
}

/**
 * Processa envio de mensagem
 */
async function sendMessage(message, context = '') {
  if (!message.trim()) return;
  
  // Adiciona mensagem do usu√°rio
  addMessageToChat('user', message);
  
  // Adiciona indicador de digita√ß√£o
  const typingMessage = addMessageToChat('ai', '', true);
  
  // Desabilita bot√µes durante processamento
  toggleChatControls(false);
  
  try {
    // Gera resposta
    const response = await generateAIResponse(message, context);
    
    // Remove indicador de digita√ß√£o
    removeMessageFromChat(typingMessage);
    
    // Adiciona resposta da IA
    addMessageToChat('ai', response);
    
    // Salva no hist√≥rico
    chatHistory.push({ user: message, ai: response, context: context });
    
  } catch (error) {
    // Remove indicador de digita√ß√£o
    removeMessageFromChat(typingMessage);
    
    // Mostra mensagem de erro
    const errorMessage = error.message || 'Erro ao processar sua mensagem. Tente novamente.';
    addMessageToChat('ai', `‚ùå ${errorMessage}`);
    
    console.error('Erro no chat:', error);
  } finally {
    // Reabilita controles
    toggleChatControls(true);
  }
}

/**
 * Habilita/desabilita controles do chat
 */
function toggleChatControls(enabled) {
  const sendButton = document.getElementById('ai-chat-send');
  const inputField = document.getElementById('ai-chat-input');
  const quickButtons = document.querySelectorAll('.ai-quick-btn');
  
  if (sendButton) {
    sendButton.disabled = !enabled;
  }
  
  if (inputField) {
    inputField.disabled = !enabled;
  }
  
  quickButtons.forEach(btn => {
    btn.disabled = !enabled;
  });
}

// ============================
// PERGUNTAS PR√â-DEFINIDAS
// ============================

/**
 * Define templates de perguntas baseadas no tipo
 */
function getQuestionTemplate(type, selectedText = '') {
  const templates = {
    'como-crianca': `Explique o seguinte conceito m√©dico de forma muito simples, como se fosse para uma crian√ßa de 8 anos: "${selectedText}"`,
    'nivel-doutorado': `Forne√ßa uma explica√ß√£o detalhada e t√©cnica em n√≠vel de doutorado sobre: "${selectedText}"`,
    'caso-clinico': `Crie um caso cl√≠nico interessante para diagn√≥stico diferencial envolvendo: "${selectedText}". Inclui: apresenta√ß√£o, exames e pontos chave.`,
    'resumir': `Resuma os pontos mais importantes e high-yield facts sobre: "${selectedText}"`
  };
  
  return templates[type] || `Explique mais sobre: "${selectedText}"`;
}

/**
 * Processa pergunta r√°pida
 */
async function handleQuickQuestion(questionType) {
  const context = selectedText || 'conte√∫do da p√°gina sobre s√≠ndrome ict√©rica';
  const question = getQuestionTemplate(questionType, context);
  
  await sendMessage(question, context);
}

// ============================
// SELE√á√ÉO DE TEXTO
// ============================

/**
 * Obt√©m texto selecionado
 */
function getSelectedText() {
  const selection = window.getSelection();
  return selection.toString().trim();
}

/**
 * Mostra popup de a√ß√µes para texto selecionado
 */
function showTextSelectionPopup(x, y, text) {
  const popup = document.getElementById('text-selection-popup');
  if (!popup || !text) return;
  
  selectedText = text;
  
  // Posiciona popup
  popup.style.left = x + 'px';
  popup.style.top = (y - 10) + 'px';
  popup.classList.remove('hidden');
  
  // Remove popup ap√≥s 5 segundos
  setTimeout(() => {
    hideTextSelectionPopup();
  }, 5000);
}

/**
 * Esconde popup de sele√ß√£o
 */
function hideTextSelectionPopup() {
  const popup = document.getElementById('text-selection-popup');
  if (popup) {
    popup.classList.add('hidden');
  }
}

/**
 * Processa a√ß√£o de sele√ß√£o de texto
 */
async function handleTextSelection(action) {
  hideTextSelectionPopup();
  
  if (!selectedText) return;
  
  // Abre chat se n√£o estiver vis√≠vel
  const chatWindow = document.getElementById('ai-chat-window');
  if (chatWindow && chatWindow.classList.contains('hidden')) {
    toggleChat();
  }
  
  // Mapeia a√ß√µes para tipos de pergunta
  const actionMap = {
    'explain-child': 'como-crianca',
    'explain-phd': 'nivel-doutorado',
    'create-case': 'caso-clinico'
  };
  
  const questionType = actionMap[action];
  if (questionType) {
    await handleQuickQuestion(questionType);
  }
}

// ============================
// CONTROLE DA JANELA DE CHAT
// ============================

/**
 * Alterna visibilidade do chat
 */
function toggleChat() {
  const chatWindow = document.getElementById('ai-chat-window');
  if (!chatWindow) return;
  
  const isHidden = chatWindow.classList.contains('hidden');
  
  if (isHidden) {
    chatWindow.classList.remove('hidden');
    
    // Carrega modelo se necess√°rio
    if (!isModelLoaded && !pipeline) {
      loadAIModel();
    }
  } else {
    chatWindow.classList.add('hidden');
  }
}

/**
 * Fecha o chat
 */
function closeChat() {
  const chatWindow = document.getElementById('ai-chat-window');
  if (chatWindow) {
    chatWindow.classList.add('hidden');
  }
}

// ============================
// EVENT LISTENERS
// ============================

/**
 * Configura todos os event listeners do chat
 */
function setupChatEventListeners() {
  // Bot√£o de abrir chat
  const chatIcon = document.getElementById('ai-chat-icon');
  if (chatIcon) {
    chatIcon.addEventListener('click', toggleChat);
  }
  
  // Bot√£o de fechar chat
  const closeButton = document.getElementById('ai-chat-close');
  if (closeButton) {
    closeButton.addEventListener('click', closeChat);
  }
  
  // Bot√£o de enviar mensagem
  const sendButton = document.getElementById('ai-chat-send');
  if (sendButton) {
    sendButton.addEventListener('click', () => {
      const input = document.getElementById('ai-chat-input');
      if (input && input.value.trim()) {
        sendMessage(input.value.trim());
        input.value = '';
      }
    });
  }
  
  // Campo de input (Enter para enviar)
  const inputField = document.getElementById('ai-chat-input');
  if (inputField) {
    inputField.addEventListener('keypress', (e) => {
      if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        const sendButton = document.getElementById('ai-chat-send');
        if (sendButton && !sendButton.disabled) {
          sendButton.click();
        }
      }
    });
    
    // Auto-resize do textarea
    inputField.addEventListener('input', (e) => {
      e.target.style.height = 'auto';
      e.target.style.height = Math.min(e.target.scrollHeight, 100) + 'px';
    });
  }
  
  // Bot√µes de perguntas r√°pidas
  const quickButtons = document.querySelectorAll('.ai-quick-btn');
  quickButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const questionType = btn.getAttribute('data-question');
      if (questionType) {
        handleQuickQuestion(questionType);
      }
    });
  });
  
  // Bot√µes de a√ß√£o para texto selecionado
  const selectionButtons = document.querySelectorAll('.selection-btn');
  selectionButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const action = btn.getAttribute('data-action');
      if (action) {
        handleTextSelection(action);
      }
    });
  });
  
  // Sele√ß√£o de texto
  document.addEventListener('mouseup', (e) => {
    setTimeout(() => {
      const text = getSelectedText();
      if (text && text.length > 10) {
        showTextSelectionPopup(e.pageX, e.pageY, text);
      } else {
        hideTextSelectionPopup();
      }
    }, 100);
  });
  
  // Clique fora do popup fecha ele
  document.addEventListener('click', (e) => {
    const popup = document.getElementById('text-selection-popup');
    if (popup && !popup.contains(e.target) && !popup.classList.contains('hidden')) {
      hideTextSelectionPopup();
    }
  });
  
  // ESC fecha chat e popup
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const chatWindow = document.getElementById('ai-chat-window');
      const popup = document.getElementById('text-selection-popup');
      
      if (popup && !popup.classList.contains('hidden')) {
        hideTextSelectionPopup();
      } else if (chatWindow && !chatWindow.classList.contains('hidden')) {
        closeChat();
      }
    }
  });
  
  console.log('Event listeners do chat configurados');
}

// ============================
// INICIALIZA√á√ÉO
// ============================

/**
 * Inicializa o sistema de chat
 */
function initializeAIChat() {
  console.log('Inicializando chat de IA...');
  
  try {
    setupChatEventListeners();
    console.log('Chat de IA inicializado com sucesso!');
  } catch (error) {
    console.error('Erro ao inicializar chat de IA:', error);
  }
}

// ============================
// AUTO-INICIALIZA√á√ÉO
// ============================

// Inicializa quando o DOM estiver carregado
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeAIChat);
} else {
  initializeAIChat();
}

// Exporta fun√ß√µes para uso global se necess√°rio
window.AIChat = {
  loadModel: loadAIModel,
  sendMessage: sendMessage,
  toggleChat: toggleChat,
  closeChat: closeChat
};
